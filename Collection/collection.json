{
	"info": {
		"_postman_id": "46147633-b39d-4eb4-983a-bf5771b25663",
		"name": "Assignment 1",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29168455",
		"_collection_link": "https://universal-trinity-410780.postman.co/workspace/Road-To-SDET~1a5d6c4d-44df-41dd-8686-104665225cb7/collection/29168455-46147633-b39d-4eb4-983a-bf5771b25663?action=share&source=collection_link&creator=29168455"
	},
	"item": [
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var Token = jsonData.token;\r",
							"\r",
							"pm.collectionVariables.set(\"Token\", Token);\r",
							"// pm.environment.set(\"Token\", Token);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\":\"admin@roadtocareer.net\",\r\n    \"password\":\"1234\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://dmoney.roadtocareer.net/user/login",
					"protocol": "http",
					"host": [
						"dmoney",
						"roadtocareer",
						"net"
					],
					"path": [
						"user",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "admin login with valid creds",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var token = jsonData.token;\r",
							"\r",
							"pm.collectionVariables.set(\"Token\", token);\r",
							"\r",
							"pm.test(\"Check if user Login Successfully\", function () {\r",
							"    pm.expect(jsonData.message).contains(\"Login successfully\");\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\":\"admin@roadtocareer.net\",\r\n    \"password\":\"1234\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://dmoney.roadtocareer.net/user/login",
					"protocol": "http",
					"host": [
						"dmoney",
						"roadtocareer",
						"net"
					],
					"path": [
						"user",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "admin login with wrong creds",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check if user not found\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).contains(\"User not found\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\":\"admin@roadtocareer\",\r\n    \"password\":\"1234\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/user/login",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"user",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Agent",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var randomId=_.random(10000,99999)\r",
							"var AgentphoneNumber=\"01\"+_.random(100000000,999999999)\r",
							"pm.collectionVariables.set(\"randomId\",randomId)\r",
							"pm.collectionVariables.set(\"AgentphoneNumber\",AgentphoneNumber)\r",
							"\r",
							"// pm.environment.set(\"randomId\",randomId)\r",
							"// pm.environment.set(\"phoneNumber\",phoneNumber)"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData= pm.response.json();\r",
							"var id= jsonData.user.id;\r",
							"var phonenumber=jsonData.user.phone_number;\r",
							"\r",
							"pm.collectionVariables.set(\"agentId\",id)\r",
							"pm.collectionVariables.set(\"agent_phone_number\",phonenumber)\r",
							"\r",
							"// pm.environment.set(\"agentId\",id)\r",
							"// pm.environment.set(\"agent_phone_number\",phonenumber)\r",
							"\r",
							"pm.test(\"Check if user created\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).contains(\"User created\");\r",
							"});\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{Token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "ROADTOSDET",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"Test_Agent Hridi\",\r\n    \"email\":\"agent{{randomId}}@test.com\",\r\n    \"password\":\"1234\",\r\n    \"phone_number\":\"{{AgentphoneNumber}}\",\r\n    \"nid\":\"923456789\",\r\n    \"role\":\"Agent\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/user/create",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"user",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Marchant",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var randoId=_.random(10000,99999)\r",
							"var MarchantphoneNumber=\"01\"+_.random(100000000,999999999)\r",
							"pm.collectionVariables.set(\"randoId\",randoId)\r",
							"pm.collectionVariables.set(\"MarchantphoneNumber\",MarchantphoneNumber)\r",
							"\r",
							"// pm.environment.set(\"randomId\",randomId)\r",
							"// pm.environment.set(\"phoneNumber\",phoneNumber)\r",
							"var randNID = _.random(1000000000, 9999999999)\r",
							"pm.collectionVariables.set(\"MarNID\", randNID);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData= pm.response.json();\r",
							"var id= jsonData.user.id;\r",
							"var phonenumber=jsonData.user.phone_number;\r",
							"\r",
							"pm.collectionVariables.set(\"agentId\",id)\r",
							"pm.collectionVariables.set(\"marchnat_phone_number\",phonenumber)\r",
							"\r",
							"// pm.environment.set(\"agentId\",id)\r",
							"// pm.environment.set(\"agent_phone_number\",phonenumber)\r",
							"\r",
							"pm.test(\"Check if user created\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).contains(\"User created\");\r",
							"});\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{Token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{X-AUTH-SECRET-KEY}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"Test_Marchant Hridi\",\r\n    \"email\":\"agent{{randoId}}@test.com\",\r\n    \"password\":\"1234\",\r\n    \"phone_number\":\"{{MarchantphoneNumber}}\",\r\n    \"nid\":\"{{MarNID}}\",\r\n    \"role\":\"Marchant\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/user/create",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"user",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Customer1",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var prefix =\"01\"\r",
							"var randomNumber = _.random(100000000,999999999)\r",
							"var phoneNumber1= prefix + randomNumber;\r",
							"pm.collectionVariables.set(\"phoneNumber1\", phoneNumber1);\r",
							"\r",
							"var ranNID = _.random(1000000000, 9999999999)\r",
							"pm.collectionVariables.set(\"NID\", ranNID);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User should created successfully\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"User created\");\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"var id = jsonData.user.id;\r",
							"var phoneNumber = jsonData.user.phone_number;\r",
							"pm.collectionVariables.set(\"userId\", id)\r",
							"pm.collectionVariables.set(\"customer1_phone_number\", phoneNumber)\r",
							"\r",
							"pm.environment.set(\"userId\",id)\r",
							"pm.environment.set(\"customer1_phone_number\",phoneNumber)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{Token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "ROADTOSDET",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"{{$randomFullName}}\",\r\n    \"email\":\"{{$randomEmail}}\",\r\n    \"password\":\"{{$randomPassword}}\",\r\n    \"phone_number\":\"{{phoneNumber1}}\",\r\n    \"nid\":\"1234789428\",\r\n    \"role\":\"Customer 1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/user/create",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"user",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "create existing user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"check if user already exist\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).contains(\"User already exists\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 208\", function () {\r",
							"    pm.response.to.have.status(208);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{Token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{X-AUTH-SECRET-KEY}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"{{$randomFullName}}\",\r\n    \"email\":\"{{$randomEmail}}\",\r\n    \"password\":\"{{$randomPassword}}\",\r\n    \"phone_number\":\"{{phoneNumber1}}\",\r\n    \"nid\":\"1234789428\",\r\n    \"role\":\"Customer 1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/user/create",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"user",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Customer 2",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var prefix2 =\"01\"\r",
							"var randomNumber2 = _.random(100000000,999999999)\r",
							"var phoneNumberc2 = prefix2 + randomNumber2;\r",
							"pm.collectionVariables.set(\"phoneNumberc2\", phoneNumberc2);\r",
							"\r",
							"var ranNID2 = _.random(1000000000, 9999999999)\r",
							"pm.collectionVariables.set(\"NID2\", ranNID2);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User should created successfully\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"User created\");\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"var id = jsonData.user.id;\r",
							"var phoneNumber = jsonData.user.phone_number;\r",
							"pm.collectionVariables.set(\"userId\", id)\r",
							"pm.collectionVariables.set(\"customer2_phone_number\", phoneNumber)\r",
							"\r",
							"pm.environment.set(\"userId\",id)\r",
							"pm.environment.set(\"customer_phone_number\",phoneNumber)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{Token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{X-AUTH-SECRET-KEY}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"{{$randomFullName}}\",\r\n    \"email\":\"{{$randomEmail}}\",\r\n    \"password\":\"{{$randomPassword}}\",\r\n    \"phone_number\":\"{{phoneNumberc2}}\",\r\n    \"nid\":\"1234789429\",\r\n    \"role\":\"Customer 2\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/user/create",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"user",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Customer 2 (check requirements)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var prefix2 =\"01\"\r",
							"var randomNumber2 = _.random(100000000,999999999)\r",
							"var phoneNumberc2 = prefix2 + randomNumber2;\r",
							"pm.collectionVariables.set(\"phoneNumberc2\", phoneNumberc2);\r",
							"\r",
							"var ranNID2 = _.random(1000000000, 9999999999)\r",
							"pm.collectionVariables.set(\"NID2\", ranNID2);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"check if any fields are missing\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"\\\"phone_number\\\" is required\");\r",
							"});\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "{{Token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{X-AUTH-SECRET-KEY}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"{{$randomFullName}}\",\r\n    \"email\":\"{{$randomEmail}}\",\r\n    \"password\":\"{{$randomPassword}}\",\r\n    \"nid\":\"1234789429\",\r\n    \"role\":\"Customer\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/user/update/24347",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"user",
						"update",
						"24347"
					]
				}
			},
			"response": []
		},
		{
			"name": "update customer1 role",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "{{Token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{X-AUTH-SECRET-KEY}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"{{$randomFullName}}\",\r\n    \"email\":\"{{$randomEmail}}\",\r\n    \"password\":\"{{$randomPassword}}\",\r\n    \"phone_number\":\"{{phoneNumber1}}\",\r\n    \"nid\":\"1234789428\",\r\n    \"role\":\"Customer\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/user/update/24223",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"user",
						"update",
						"24223"
					]
				}
			},
			"response": []
		},
		{
			"name": "update customer2 role",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "{{Token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{X-AUTH-SECRET-KEY}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"{{$randomFullName}}\",\r\n    \"email\":\"{{$randomEmail}}\",\r\n    \"password\":\"{{$randomPassword}}\",\r\n    \"phone_number\":\"{{phoneNumberc2}}\",\r\n    \"nid\":\"1234789429\",\r\n    \"role\":\"Customer\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/user/update/24225",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"user",
						"update",
						"24225"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get cus 1 ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Check if user is found \", function () {\r",
							"    pm.expect(jsonData.message).contains(\"User found\");\r",
							"});\r",
							"\r",
							"// pm.collectionVariables.set(\"userId\", jsonData.user?.id);\r",
							"// pm.collectionVariables.set(\"Name\", jsonData.user?.name);\r",
							"// pm.collectionVariables.set(\"Email\", jsonData.user?.email);\r",
							"// // pm.collectionVariables.set(\"phonenumber\", jsonData.user?.phonenumber);\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{Token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{authkey}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseurl}}/user/search/id/24354",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"user",
						"search",
						"id",
						"24354"
					]
				}
			},
			"response": []
		},
		{
			"name": "Deposit money from system to agent",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{Token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "ROADTOSDET",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from_account\":\"SYSTEM\",\r\n    \"to_account\":\"{{agent_phone_number}}\",\r\n    \"amount\":4000\r\n    \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/transaction/deposit",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"transaction",
						"deposit"
					]
				}
			},
			"response": []
		},
		{
			"name": "Deposit money from system to agent (limit)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Minimum deposit amount 10 tk and maximum deposit amount 10000 tk\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).contains(\"Minimum deposit amount 10 tk and maximum deposit amount 10000 tk\");\r",
							"});\r",
							"pm.test(\"Status code is 208\", function () {\r",
							"    pm.response.to.have.status(208);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{Token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "ROADTOSDET",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from_account\":\"SYSTEM\",\r\n    \"to_account\":\"{{agent_phone_number}}\",\r\n    \"amount\":400000\r\n    \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/transaction/deposit",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"transaction",
						"deposit"
					]
				}
			},
			"response": []
		},
		{
			"name": "agent deposit to customer2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"check if deposite done successfully\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).contains(\"Deposit successful\");\r",
							"});\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{Token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "ROADTOSDET",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from_account\":\"{{agent_phone_number}}\",\r\n    \"to_account\":\"{{customer2_phone_number}}\",\r\n    \"amount\":3020\r\n    \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/transaction/deposit",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"transaction",
						"deposit"
					]
				}
			},
			"response": []
		},
		{
			"name": "agent deposit to customer2 insufficient balance",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"check if have insufficient balance\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).contains(\"Insufficient balance\");\r",
							"});\r",
							"pm.test(\"Status code is 208\", function () {\r",
							"    pm.response.to.have.status(208);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{Token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "ROADTOSDET",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from_account\":\"{{agent_phone_number}}\",\r\n    \"to_account\":\"{{customer2_phone_number}}\",\r\n    \"amount\":30200\r\n    \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/transaction/deposit",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"transaction",
						"deposit"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check Agent Balance",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"check user balance\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).contains(\"User balance\");\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{Token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "ROADTOSDET",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseurl}}/transaction/balance/{{agent_phone_number}}",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"transaction",
						"balance",
						"{{agent_phone_number}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check  agent statement",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"check Transaction list\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).contains(\"Transaction list\");\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{Token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{X-AUTH-SECRET-KEY}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseurl}}/transaction/statement/{{agent_phone_number}}",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"transaction",
						"statement",
						"{{agent_phone_number}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Search by transaction ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"check Transaction list\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).contains(\"Transaction list\");\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{Token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{X-AUTH-SECRET-KEY}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseurl}}/transaction/search/TXN657070",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"transaction",
						"search",
						"TXN657070"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check System Balance",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"check User balance\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).contains(\"User balance\");\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{Token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{X-AUTH-SECRET-KEY}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseurl}}/transaction/balance/SYSTEM",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"transaction",
						"balance",
						"SYSTEM"
					]
				}
			},
			"response": []
		},
		{
			"name": "Withdraw by cus2 Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{Token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{X-AUTH-SECRET-KEY}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from_account\":\"{{customer2_phone_number}}\",\r\n    \"to_account\":\"{{AgentphoneNumber}}\",\r\n    \"amount\":600\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/transaction/withdraw",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"transaction",
						"withdraw"
					]
				}
			},
			"response": []
		},
		{
			"name": "cannot Withdraw by cus2 to invalid number",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check if withdraw to invalid number\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).contains(\"Account does not exist\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Status code is 208\", function () {\r",
							"        pm.response.to.have.status(208);\r",
							"});\r",
							"\r",
							"// pm.test(\"Status code is 201\", function () {\r",
							"//     pm.response.to.have.status(201);\r",
							"// });"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{Token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{X-AUTH-SECRET-KEY}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from_account\":\"{{customer_phone_number}}\",\r\n    \"to_account\":\"{{AgentphoneNumber}}\",\r\n    \"amount\":600\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/transaction/withdraw",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"transaction",
						"withdraw"
					]
				}
			},
			"response": []
		},
		{
			"name": "cust1 check balance",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{Token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{X-AUTH-SECRET-KEY}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/transaction/balance/{{customer2_phone_number}}",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"transaction",
						"balance",
						"{{customer2_phone_number}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Send money cus to cus",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Send Money is successful\",()=>{\r",
							"    var jsonData= pm.response.json();\r",
							"    var message= jsonData.message;\r",
							"    pm.expect(message).contains(\"Send money successful\")\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{Token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{X-AUTH-SECRET-KEY}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from_account\":\"{{customer1_phone_number}}\",\r\n    \"to_account\":\"{{customer2_phone_number}}\",\r\n    \"amount\":100\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/transaction/sendmoney",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"transaction",
						"sendmoney"
					]
				}
			},
			"response": []
		},
		{
			"name": "Cannot Send money agent to cus",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"For send money a/c should not be an agent \", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).contains(\"From/To account should not be an agent account\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 208\", function () {\r",
							"    pm.response.to.have.status(208);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{Token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{X-AUTH-SECRET-KEY}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from_account\":\"{{customer2_phone_number}}\",\r\n    \"to_account\":\"{{agent_phone_number}}\",\r\n    \"amount\":100\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/transaction/sendmoney",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"transaction",
						"sendmoney"
					]
				}
			},
			"response": []
		},
		{
			"name": "Payment to marchant",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{Token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{X-AUTH-SECRET-KEY}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from_account\":\"{{customer2_phone_number}}\",\r\n    \"to_account\":\"01686606905\",\r\n    \"amount\":20\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/transaction/payment",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"transaction",
						"payment"
					]
				}
			},
			"response": []
		},
		{
			"name": "cus1 check balance",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{Token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{X-AUTH-SECRET-KEY}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseurl}}/transaction/balance/{{customer1_phone_number}}",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"transaction",
						"balance",
						"{{customer1_phone_number}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "cus1 statement",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{Token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{X-AUTH-SECRET-KEY}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseurl}}/transaction/statement/{{customer1_phone_number}}",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"transaction",
						"statement",
						"{{customer1_phone_number}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Marchant balance",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{Token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{X-AUTH-SECRET-KEY}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseurl}}/transaction/balance/01686606905",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"transaction",
						"balance",
						"01686606905"
					]
				}
			},
			"response": []
		},
		{
			"name": "Marchant Statement",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{Token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{X-AUTH-SECRET-KEY}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseurl}}/transaction/statement/01686606905",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"transaction",
						"statement",
						"01686606905"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "Token",
			"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFkbWluQHJvYWR0b2NhcmVlci5uZXQiLCJwYXNzd29yZCI6IjEyMzQiLCJpYXQiOjE2OTMxMzI4NjcsImV4cCI6MTY5MzEzNDY2N30.yxrdCl7Fl7onM_a4UlLch1PIK5fBGg0JO6X2jqUCgr0"
		},
		{
			"key": "baseurl",
			"value": "http://dmoney.roadtocareer.net",
			"type": "string"
		},
		{
			"key": "X-AUTH-SECRET-KEY",
			"value": "ROADTOSDET",
			"type": "string"
		},
		{
			"key": "randomId",
			"value": 58463
		},
		{
			"key": "AgentphoneNumber",
			"value": "01407280945"
		},
		{
			"key": "agentId",
			"value": 24358
		},
		{
			"key": "agent_phone_number",
			"value": "01407280945"
		},
		{
			"key": "phoneNumber1",
			"value": "01171508176"
		},
		{
			"key": "NID",
			"value": 8806793173
		},
		{
			"key": "userId",
			"value": 24360
		},
		{
			"key": "Name",
			"value": "Robin Doyle"
		},
		{
			"key": "Email",
			"value": "Matt23@yahoo.com"
		},
		{
			"key": "customer1_phone_number",
			"value": "01171508176"
		},
		{
			"key": "phoneNumberc2",
			"value": "01301752443"
		},
		{
			"key": "NID2",
			"value": 4665268480
		},
		{
			"key": "customer2_phone_number",
			"value": "01423116181"
		},
		{
			"key": "randoId",
			"value": 66193
		},
		{
			"key": "MarchantphoneNumber",
			"value": "01787176670"
		},
		{
			"key": "MarNID",
			"value": 4857694831
		},
		{
			"key": "marchnat_phone_number",
			"value": "01787176670"
		}
	]
}